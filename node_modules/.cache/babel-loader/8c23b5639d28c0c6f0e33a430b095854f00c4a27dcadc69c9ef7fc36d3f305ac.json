{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\n\n// root state object.\n// each Vuex instance is just a single state tree.\nconst state = {\n  count: 0\n};\n\n// mutations are operations that actually mutate the state.\n// each mutation handler gets the entire state tree as the\n// first argument, followed by additional payload arguments.\n// mutations must be synchronous and can be recorded by plugins\n// for debugging purposes.\nconst mutations = {\n  increment(state) {\n    state.count++;\n  },\n  decrement(state) {\n    state.count--;\n  }\n};\n\n// actions are functions that cause side effects and can involve\n// asynchronous operations.\nconst actions = {\n  increment: ({\n    commit\n  }) => commit('increment'),\n  decrement: ({\n    commit\n  }) => commit('decrement'),\n  incrementIfOdd({\n    commit,\n    state\n  }) {\n    if ((state.count + 1) % 2 === 0) {\n      commit('increment');\n    }\n  },\n  incrementAsync({\n    commit\n  }) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        commit('increment');\n        resolve();\n      }, 1000);\n    });\n  }\n};\n\n// getters are functions.\nconst getters = {\n  evenOrOdd: state => state.count % 2 === 0 ? 'even' : 'odd'\n};\n\n// A Vuex instance is created by combining the state, mutations, actions,\n// and getters.\nexport default new Vuex.Store({\n  state,\n  getters,\n  actions,\n  mutations\n});","map":{"version":3,"names":["Vue","Vuex","use","state","count","mutations","increment","decrement","actions","commit","incrementIfOdd","incrementAsync","Promise","resolve","setTimeout","getters","evenOrOdd","Store"],"sources":["/media/diego/bkp-diego/estudos/senior-frontend-assessment/proj-sen/src/store/store.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\n// root state object.\n// each Vuex instance is just a single state tree.\nconst state = {\n  count: 0\n}\n\n// mutations are operations that actually mutate the state.\n// each mutation handler gets the entire state tree as the\n// first argument, followed by additional payload arguments.\n// mutations must be synchronous and can be recorded by plugins\n// for debugging purposes.\nconst mutations = {\n  increment (state) {\n    state.count++\n  },\n  decrement (state) {\n    state.count--\n  }\n}\n\n// actions are functions that cause side effects and can involve\n// asynchronous operations.\nconst actions = {\n  increment: ({ commit }) => commit('increment'),\n  decrement: ({ commit }) => commit('decrement'),\n  incrementIfOdd ({ commit, state }) {\n    if ((state.count + 1) % 2 === 0) {\n      commit('increment')\n    }\n  },\n  incrementAsync ({ commit }) {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        commit('increment')\n        resolve()\n      }, 1000)\n    })\n  }\n}\n\n// getters are functions.\nconst getters = {\n  evenOrOdd: state => state.count % 2 === 0 ? 'even' : 'odd'\n}\n\n// A Vuex instance is created by combining the state, mutations, actions,\n// and getters.\nexport default new Vuex.Store({\n  state,\n  getters,\n  actions,\n  mutations\n})"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;;AAEb;AACA;AACA,MAAME,KAAK,GAAG;EACZC,KAAK,EAAE;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAG;EAChBC,SAAS,CAAEH,KAAK,EAAE;IAChBA,KAAK,CAACC,KAAK,EAAE;EACf,CAAC;EACDG,SAAS,CAAEJ,KAAK,EAAE;IAChBA,KAAK,CAACC,KAAK,EAAE;EACf;AACF,CAAC;;AAED;AACA;AACA,MAAMI,OAAO,GAAG;EACdF,SAAS,EAAE,CAAC;IAAEG;EAAO,CAAC,KAAKA,MAAM,CAAC,WAAW,CAAC;EAC9CF,SAAS,EAAE,CAAC;IAAEE;EAAO,CAAC,KAAKA,MAAM,CAAC,WAAW,CAAC;EAC9CC,cAAc,CAAE;IAAED,MAAM;IAAEN;EAAM,CAAC,EAAE;IACjC,IAAI,CAACA,KAAK,CAACC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MAC/BK,MAAM,CAAC,WAAW,CAAC;IACrB;EACF,CAAC;EACDE,cAAc,CAAE;IAAEF;EAAO,CAAC,EAAE;IAC1B,OAAO,IAAIG,OAAO,CAAEC,OAAO,IAAK;MAC9BC,UAAU,CAAC,MAAM;QACfL,MAAM,CAAC,WAAW,CAAC;QACnBI,OAAO,EAAE;MACX,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,MAAME,OAAO,GAAG;EACdC,SAAS,EAAEb,KAAK,IAAIA,KAAK,CAACC,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG;AACvD,CAAC;;AAED;AACA;AACA,eAAe,IAAIH,IAAI,CAACgB,KAAK,CAAC;EAC5Bd,KAAK;EACLY,OAAO;EACPP,OAAO;EACPH;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\n\n// root state object.\n// each Vuex instance is just a single state tree.\nconst table = {\n  hour: 0,\n  value: 0,\n  id: 1\n};\n\n// mutations are operations that actually mutate the state.\n// each mutation handler gets the entire state tree as the\n// first argument, followed by additional payload arguments.\n// mutations must be synchronous and can be recorded by plugins\n// for debugging purposes.\nconst mutations = {\n  increment(state) {\n    state.count++;\n  },\n  decrement(state) {\n    state.count--;\n  }\n};\n\n// actions are functions that cause side effects and can involve\n// asynchronous operations.\nconst actions = {\n  increment: ({\n    commit\n  }) => commit('increment'),\n  decrement: ({\n    commit\n  }) => commit('decrement')\n};\n\n// getters are functions.\nconst getters = {\n  evenOrOdd: state => state.count % 2 === 0 ? 'even' : 'odd'\n};\n\n// A Vuex instance is created by combining the state, mutations, actions,\n// and getters.\nexport default new Vuex.Store({\n  state,\n  getters,\n  actions,\n  mutations\n});","map":{"version":3,"names":["Vue","Vuex","use","table","hour","value","id","mutations","increment","state","count","decrement","actions","commit","getters","evenOrOdd","Store"],"sources":["/media/diego/bkp-diego/estudos/senior-frontend-assessment/proj-sen/src/store/store.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\n// root state object.\n// each Vuex instance is just a single state tree.\nconst table = {\n  hour: 0,\n  value: 0,\n  id: 1\n}\n\n// mutations are operations that actually mutate the state.\n// each mutation handler gets the entire state tree as the\n// first argument, followed by additional payload arguments.\n// mutations must be synchronous and can be recorded by plugins\n// for debugging purposes.\nconst mutations = {\n  increment (state) {\n    state.count++\n  },\n  decrement (state) {\n    state.count--\n  }\n}\n\n// actions are functions that cause side effects and can involve\n// asynchronous operations.\nconst actions = {\n  increment: ({ commit }) => commit('increment'),\n  decrement: ({ commit }) => commit('decrement'),\n}\n\n// getters are functions.\nconst getters = {\n  evenOrOdd: state => state.count % 2 === 0 ? 'even' : 'odd'\n}\n\n// A Vuex instance is created by combining the state, mutations, actions,\n// and getters.\nexport default new Vuex.Store({\n  state,\n  getters,\n  actions,\n  mutations\n})"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;;AAEb;AACA;AACA,MAAME,KAAK,GAAG;EACZC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE,CAAC;EACRC,EAAE,EAAE;AACN,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,GAAG;EAChBC,SAAS,CAAEC,KAAK,EAAE;IAChBA,KAAK,CAACC,KAAK,EAAE;EACf,CAAC;EACDC,SAAS,CAAEF,KAAK,EAAE;IAChBA,KAAK,CAACC,KAAK,EAAE;EACf;AACF,CAAC;;AAED;AACA;AACA,MAAME,OAAO,GAAG;EACdJ,SAAS,EAAE,CAAC;IAAEK;EAAO,CAAC,KAAKA,MAAM,CAAC,WAAW,CAAC;EAC9CF,SAAS,EAAE,CAAC;IAAEE;EAAO,CAAC,KAAKA,MAAM,CAAC,WAAW;AAC/C,CAAC;;AAED;AACA,MAAMC,OAAO,GAAG;EACdC,SAAS,EAAEN,KAAK,IAAIA,KAAK,CAACC,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG;AACvD,CAAC;;AAED;AACA;AACA,eAAe,IAAIT,IAAI,CAACe,KAAK,CAAC;EAC5BP,KAAK;EACLK,OAAO;EACPF,OAAO;EACPL;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}